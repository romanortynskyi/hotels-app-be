name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  integration-test:
    runs-on: ubuntu-latest
    environment: test
    strategy:
      matrix:
        node-version: [18.x]
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: localUser
          POSTGRES_PASSWORD: localPassword
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies
      run: npm install
    - name: Migrate test DB
      run: npx sequelize-cli db:migrate --env test
      env:
        DATABASE_NAME: test
        DATABASE_USERNAME: localUser
        DATABASE_PASSWORD: localPassword
        DATABASE_HOST: localhost
        DATABASE_DIALECT: postgres
        PORT: ${{ secrets.PORT }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
    - name: Integration testing
      run: npm test
  migrate-db:
    needs: integration-test
    runs-on: ubuntu-latest
    environment: development
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm install
      - name: Migrate DB
        run: npx sequelize-cli db:migrate
        env:
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_DIALECT: ${{ secrets.DATABASE_DIALECT }}
          PORT: ${{ secrets.PORT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
